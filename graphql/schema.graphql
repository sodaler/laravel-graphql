"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    posts(
        title: String @where(operator: "like")
    ): [Post!]! @paginate(defaultCount: 10)

    post(
        id: ID @eq

    ): Post @find

    events(
        name: String @where(operator: "like")
    ): [Event!] @paginate(defaultCount: 10)

    event(
        id: ID @eq
    ): Event @find

    tickets: [Ticket!] @paginate(defaultCount: 10)

    ticket(
        id: ID @eq
    ): Ticket @find
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    posts: [Post!]

    tickets: [Ticket!]

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    description: String!
    user_id: ID!
    user: User!
    created_at: DateTime
    updated_at: DateTime
}

type Event {
    id: ID!
    name: String
    date: Date
}

type Ticket {
    id: ID!
    event: Event!
    user: User!
}
